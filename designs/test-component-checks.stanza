#use-added-syntax(esir)
defpackage demo :
  import core
  import collections
  import math
  import esir
  import esir/utils
  import esir/gen
  import esir/fonts
  import repl-lib
  import tests/default-harness
  import pinspec
  import checks
  import demo-lib
  import env-params
  import land-patterns


pcb-component test-res :
  mpn = "ERJ-2RKF10R0X"
  manufacturer = "Panasonic"
  reference-prefix = "R"
  port p : pin[{1 2}]
  package = RESC1005X35(p[1] => p[1], p[2] => p[2])
  properties :
    resistor => true
    type => "thick-film"
    resistance => 10.0
    tolerance => 0.01
    rated-voltage => 50.0
    rated-power => 0.063
    derating => [[-60.0 1.0] [70.0 1.0] [155.0 0.0]]
    TCR => 100.0
    rated-temperature => [-55.0 155.0]
    temperature => 27.0

  spice:
    "[R] {p[1]} {p[2]} 10"

pcb-component test-cap-ceramic :
  mpn = "GRM155R70J105KA12D"
  manufacturer = "Murata"
  reference-prefix = "C"
  port p : pin[{1 2}]

  package = CAPC1005X55(p[1] => p[1], p[2] => p[2])
  properties :
    capacitor => true
    type => "ceramic"
    capacitance => 1.0e-6
    tolerance => 10.0
    rated-voltage => 6.3
    rated-temperature => [-55.0 125.0]
    temperature => 27.0

  spice:
    "[C] {p[1]} 1 100u"
    "[R] 1 {p[2]} 0"

pcb-component test-cap-tantalum-mno2 :
  mpn = "T491A105M020AT"
  manufacturer = "Kemet"
  reference-prefix = "C"
  pin a
  pin c

  package = CAPC1005X55(a => p[1], c => p[2])
  properties :
    capacitor => true
    type => "electrolytic"
    anode => "tantalum"
    electrolyte => "manganese-dioxide"
    capacitance => 1.0e-6
    tolerance => 20.0
    rated-voltage => 20.0
    rated-current-pk => 0.147
    rated-current-rms => [[25.0 0.091] [85.0 0.082] [125.0 0.036]]
    rated-temperature => [-55.0 125.0]
    temperature => 27.0

  spice :  
    "[C] {a} 1 100u"
    "[R] 1 {c} 9"

pcb-component test-cap-tantalum-polymer :
  mpn = "TLJH107M010#0900"
  manufacturer = "AVX"
  pin a
  pin c

  reference-prefix = "C"
  package = CAPC1005X55(a => p[1], c => p[2])

  properties :
    capacitor => true
    type => "electrolytic"
    anode => "tantalum"
    electrolyte => "polymer"
    capacitance => 100.0e-6
    rated-voltage => 10.0
    tolerance => 20.0
    rated-current-pk => 3.7
    rated-current-rms => [[25.0 0.298] [85.0 0.268] [125.0 0.119]]
    rated-temperature => [-55.0 125.0]
    temperature => 27.0

  spice:
   "[C] {a} 1 100u"
   "[R] 1 {c} 0.9"

; Do a buffer implementation of checks for variable voltage. Show how paramteres change as function of voltage.
;
; Board dimensions in mm 
val w = 50.0
val h = 50.0
val brd-outline = Rectangle(w, h) 


pcb-module checks :
  ; Design goes here


  inst r1 : test-res
  inst r2 : test-res
  inst r3 : test-res
  inst r4 : test-res
  inst ceramic : test-cap-ceramic
  inst tant-mno : test-cap-tantalum-mno2
  inst tant-poly : test-cap-tantalum-polymer

  net (r1.p[2], ceramic.p[1], r2.p[1])
  net (r2.p[2], tant-mno.a, r3.p[1])
  net (r3.p[2], tant-poly.a)

  inst ldo : {texas-instruments/TLV74325P-cmp}
  inst fmc : {samtec/ASP-134488-01}

  net gnd (ceramic.p[2] tant-poly.c tant-mno.c, ldo.gnd)

  net (r1.p[2] ldo.in ldo.en)
  net (r4.p[1] ldo.out)

  properties(fmc.v3p3):
    supply-pin => true
    voltage => [3.0 3.3 6.0]

  spice:
    ".tran 0.001ms 5m"
    ".inc TLV74325P_TRANS.LIB"
    "[V] {r1.p[1]} {tant-mno.c} 5"
    "[S] {r4.p[2]} {ldo.gnd} c {ldo.gnd} switch1"
    ".model switch1 sw vt=0 vh=0.1 ron=0.1 roff=100k"
    "[Vs] c {ldo.gnd} pulse(-1.0 1.0 1000u 100u 1000u 1000u 3000u)"


  check final-pass()

  for (instance in all-component-instances(self)) do :
    properties({instance}):
      temperature => 27.0
    ; Check components
    if has-property?(instance.resistor) :
      check resistor(instance)
    if has-property?(instance.capacitor) :
      check capacitor(instance)

    ; Check pins
    for p in ports(instance) do :
      if has-property?(p.power-pin) :
        check power-pin(p)
    ; for n in nets(self) do :


  ; for (instance in instances(self), i in 0 to false) do :
  ;   schematic-group({instance}) = my-group[i]


; User defined pass that gets run at end of design pipeline
pcb-check final-pass ():
  defn propogate-voltage (n:NetStmt) :
    val supply-pin  = for p in refs(n) find : has-property?(p.voltage)
    if supply-pin is Ref :
      val sp = supply-pin as Ref
      if has-property?(sp.voltage) : 
        val v = property(sp.voltage)
        for p in refs(n) do :
          if has-property?(p.supply-pin) :
            if property(p.voltage) != v :
              println("Incompatible supply voltages on same net.")
          else :
            inside pcb-module:
              properties({p}):
                voltage => v
  for n in nets(self) do :
    propogate-voltage(n)


pcb-design main-design :
  module = checks

; visualize(main-design)

print-esir("input.esir")

