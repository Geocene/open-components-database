#use-added-syntax(esir)
defpackage ocdb/terminations:
  import core
  import collections
  import math
  import esir
  import esir/utils
  import esir/gen
  import ocdb/tests/default-harness
  import ocdb/generic-components
  import ocdb/generator-utils
  import ocdb/checks
  import ocdb/design-vars


public defn terminate-can (bus:Ref, gnd:Ref, method:String, ctrl:Ref|False) :
  inside pcb-module:
    switch(method) :
      "parallel":
        res-strap(bus.canh, bus.canl, 120.0)
      "parallel+common-mode-filter":
        unique inst c : {gen-cap-cmp(4.7e-9)}
        res-strap(bus.canh, c.p[1], 60.0)
        res-strap(bus.canl, c.p[1], 60.0)
        net ({c}.p[2], gnd)
      "switchable":
        val ctrl-pin = ctrl as Ref
        unique inst q : {ocdb/on-semiconductor/FDN352AP/component}[2]
        res-strap(bus.canh, q[0].s, 56.0)
        res-strap(bus.canl, q[1].s, 56.0)
        net ({q}[0].g {q}[1].g)
        net ({q}[0].d {q}[1].d)
        res-strap(ctrl-pin, q[0].g, 1.0e3)
        res-strap(q[0].g, gnd,  33.0e3)
        cap-strap(q[0].d, gnd, 4.7e-9)
        res-strap(q[0].d, gnd, 100.0e3)

public defn terminate-can (bus:Ref, gnd:Ref, method:String) :
  terminate-can(bus, gnd, method, false)

