#use-added-syntax(esir2)
defpackage ocdb/analog-devices/LT3045:
  import core
  import collections
  import math
  import esir2
  import esir2/utils
  import esir2/repl-lib
  import ocdb/tests/default-harness
  import ocdb/land-patterns
  import ocdb/generic-components
  import ocdb/generator-utils
  import ocdb/symbols
  import ocdb/box-symbol2

public pcb-component component :
  name = "LT3045"
  manufacturer = "Analog Devices"
  mpn = "LT3045EDD-1"
  description = "20V, 500mA, Ultralow Noise, Ultrahigh PSRR Linear Regulator with VIOC Control"
  pin-properties :
    [pin:Ref | pads:Int ...   | side:Dir  ]
    [in | 1 2  | Left]
    [en | 4  | Left]
    [pg | 5  | Left]
    [set  | 8  | Left]
    [vioc | 3  | Left]
    [ilim | 6 | Left]
    [out  | 11 12 | Right]
    [outs | 10  | Right]
    [pgfb | 7  | Right]
    [gnd  | 9 13 | Down]
  make-box-symbol()
  assign-package(dfn-package(12, 0.45, [0.25, 0.7], -1.4, [3.5, 3.0], [1.65, 2.38]))

public pcb-module module (v-out:Double) :
  pin vin
  pin vout
  pin gnd
  pin en
  inst ps : ocdb/analog-devices/LT3045/component
  val r-set = v-out / 100.0e-6
  val r-fb = res-strap(ps.set, gnd, r-set)
  val c0 = cap-strap(ps.set, gnd, 10.0e-3)
  val c1 = cap-strap(ps.in, gnd, ["capacitance" => 4.7e-6 "min-voltage" => 30.0])
  val c2 = cap-strap(ps.out, gnd, ["capacitance" => 4.7e-6 "min-voltage" => 30.0])
  ; short-trace(r-fb.p[1], ps.set)
  ; short-trace(r-fb.p[1], c0.p[1])
  ; short-trace(c1.p[1], ps.in)
  ; short-trace(c2.p[1], ps.out)
  net (ps.en, en)
  net (ps.in, ps.pgfb, vin)
  net (ps.out, ps.outs, vout)
  net (ps.gnd, ps.ilim, gnd)

public pcb-module module () :
  inst i : module(5.0) ; TODO -- FATAL ERROR: No component in the database meets requirements ...
