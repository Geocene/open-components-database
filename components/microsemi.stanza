#use-added-syntax(esir)
defpackage microsemi:
  import core
  import collections
  import math
  import esir
  import esir/utils
  import esir/gen
  import tests/default-harness
  import pinspec
  import land-patterns
  import bundles

defn gen-symbol-map (ps:PinSpec, pkg:Ref) :
  inside pcb-component :
    make-pins(ps)
    assign-package(pkg, ps)

public pcb-component A2F200M3F-FGG256I :
  manufacturer = "Microsemi"
  mpn = "A2F200M3F-FGG256I"
  description = "FPGA SmartFusion"
  val ps = PinSpec $ #TABLE :
    [Ref | Ref ...   | Dir | Ref ]
    [GND | A[1] A[5] A[9] A[12]A[16]B[2] B[15]C[7] C[13]D[3] E[6] E[8] E[10]F[2] F[7] F[9] F[11]
           F[15]G[6] G[8] G[10]H[1] H[7] H[9] H[11] H[16] J[6] J[8] J[10] K[7] K[9] K[11] K[13] L[1]
           L[6] L[8] L[10] L[16] M[4] N[15] | Down | supply ]
    [GNDQ    | B[16] D[4] D[12] E[5] F[13] J[5] | Down | supply] 
    [GNDENVM | G[16]  | Down | supply] 
    [VPP | G[12] | Up | supply ]
    [VCCENVM | F[16] | Up | supply ]
    [VCC | F[8]  F[10] G[7] G[9] H[8] H[10] J[7] J[9] K[8] K[10] L[7] L[9] | Up | supply]
    [PU_N        | T[16] | Right | supply] 
    [MSS_RESET_N | K[4]  | Right | supply] 
    [VCC33SDD0 | P[2]   | Up    | analog]   
    [VCC33SDD1 | N[14]  | Up    | analog]   
    [VCC15ADC0 | P[8]   | Up    | analog]   
    [VCC15ADC1 | R[8]   | Up    | analog]   
    [VCC33ADC0 | R[7]   | Up    | analog]   
    [VCC33ADC1 | N[8]   | Up    | analog]   
    [VCC33A    | R[16]  | Up    | analog]   
    [VCC15A    | N[3]   | Up    | analog]   
    [VCC33N    | P[3]   | Up    | analog]   
    [VCC33AP   | N[4]   | Up    | analog]   
    [VAREFOUT  | N[12]  | Right | analog] 
    [VAREF0    | T[6]   | Right | analog] 
    [VAREF1    | T[9]   | Right | analog] 
    [SDD0      | R[2]   | Right | analog] 
    [SDD1      | T[12]  | Right | analog] 
    [ADC[0]    | T[5]   | Right | analog] 
    [ADC[1]    | R[6]   | Right | analog] 
    [ADC[2]    | P[7]   | Right | analog] 
    [ADC[3]    | M[5]   | Right | analog] 
    [ADC[4]    | M[9]   | Right | analog] 
    [ADC[5]    | N[9]   | Right | analog] 
    [ADC[6]    | P[9]   | Right | analog] 
    [ADC[7]    | R[9]   | Right | analog] 
    [CM[0]     | T[3]   | Right | analog] 
    [CM[1]     | P[6]   | Right | analog] 
    [CM[2]     | M[12]  | Right | analog] 
    [CM[3]     | N[10]  | Right | analog] 
    [TM[0]     | R[4]   | Right | analog] 
    [TM[1]     | N[6]   | Right | analog] 
    [TM[2]     | M[11]  | Right | analog] 
    [TM[3]     | P[10]  | Right | analog] 
    [ABPS[0]   | R[3]   | Right | analog]
    [ABPS[1]   | T[2]   | Right | analog]
    [ABPS[2]   | R[5]   | Right | analog]
    [ABPS[3]   | N[5]   | Right | analog]
    [ABPS[4]   | R[11]  | Right | analog]
    [ABPS[5]   | T[11]  | Right | analog]
    [ABPS[6]   | T[10]  | Right | analog]
    [ABPS[7]   | R[10]  | Right | analog]
    [PCAP      | R[1]   | Right | analog] 
    [NCAP      | T[1]   | Right | analog] 
    [PTEM      | P[15]  | Right | analog] 
    [PTBASE    | P[16]  | Right | analog] 
    [GND15ADC0 | M[6]       | Down | analog]  
    [GND15ADC1 | T[8]       | Down | analog]  
    [GND33ADC1 | M[7] M[8]  | Down | analog]  
    [GND33ADC0 | T[7] N[7]  | Down | analog]  
    [GNDA      | P[4] P[11] | Down | analog]  
    [GNDAQ     | P[5] N[11] | Down | analog]  
    [GNDTM0    | T[4]       | Down | analog]  
    [GNDTM1    | M[10]      | Down | analog]  
    [GNDSDD1   | N[13]      | Down | analog]  
    [GNDSDD0   | P[1]       | Down | analog]  
    [GNDVAREF  | T[13]      | Down | analog]
    [VDDBAT      | P[14] | Up | osc]
    [VCCRCOSC    | K[5]  | Up | osc]
    [VCCLPXTAL   | T[15] | Up | osc]
    [VCCMAINXTAL | P[12] | Up | osc]
    [VCOMPLA     | D[2]  | Up | osc]  
    [VCCPLL      | C[2]  | Up | osc]  
    [LPXIN       | R[14] | Right | osc]
    [LPXOUT      | R[15] | Right | osc]
    [MAINXIN     | R[12] | Right | osc]
    [MAINXOUT    | R[13] | Right | osc]
    [GNDRCOSC    | J[4]  | Down | osc]
    [GNDLPXTAL   | P[13] | Down | osc]
    [GNDMAINXTAL | T[14] | Down | osc]
    [VJTAG       | H[12] | Up | jtag]
    [JTAGSEL     | H[15] | Right | jtag]
    [TRSTB       | G[13] | Right | jtag]
    [TMS         | G[14] | Right | jtag]
    [TCK         | G[15] | Right | jtag]
    [TDO         | H[13] | Right | jtag]
    [TDI         | H[14] | Right | jtag]
    [VCCFPGAIOB[1] | D[16] E[13] G[11] | Up | bank[0] ]
    [IO00NDB0V0-GAA0-EMC_CLK      | D[5]  | Right | bank[0]]
    [IO00PDB0V0-GAA1-EMC_RW_N     | D[6]  | Right | bank[0]]
    [IO01NDB0V0-GAB0-EMC_CS0_N    | C[5]  | Right | bank[0]]
    [IO01PDB0V0-GAB1-EMC_CS1_N    | C[6]  | Right | bank[0]]
    [IO02NDB0V0-GAC0-EMC_BYTEN[0] | C[3]  | Right | bank[0]]
    [IO02PDB0V0-GAC1-EMC_BYTEN[1] | B[3]  | Right | bank[0]]
    [IO03NDB0V0-EMC_OEN0_N        | B[4]  | Right | bank[0]]
    [IO03PDB0V0-EMC_OEN1_N        | B[5]  | Right | bank[0]]
    [IO04NDB0V0-EMC_AB[0]         | A[3]  | Right | bank[0]]
    [IO04PDB0V0-EMC_AB[1]         | A[4]  | Right | bank[0]]
    [IO05NDB0V0-EMC_AB[2]         | B[6]  | Right | bank[0]]
    [IO05PDB0V0-EMC_AB[3]         | A[6]  | Right | bank[0]]
    [IO06NDB0V0-EMC_AB[4]         | B[7]  | Right | bank[0]]
    [IO06PDB0V0-EMC_AB[5]         | A[7]  | Right | bank[0]]
    [IO07NDB0V0-EMC_AB[6]         | D[7]  | Right | bank[0]]
    [IO07PDB0V0-EMC_AB[7]         | D[8]  | Right | bank[0]]
    [IO08NDB0V0-EMC_AB[8]         | C[8]  | Right | bank[0]]
    [IO08PDB0V0-EMC_AB[9]         | B[8]  | Right | bank[0]]
    [IO09NDB0V0-EMC_AB[10]        | D[9]  | Right | bank[0]]
    [IO09PDB0V0-EMC_AB[11]        | C[9]  | Right | bank[0]]
    [IO10NDB0V0-EMC_AB[12]        | B[9]  | Right | bank[0]]
    [IO10PDB0V0-EMC_AB[13]        | B[10] | Right | bank[0]]
    [IO11NDB0V0-EMC_AB[14]        | A[10] | Right | bank[0]]
    [IO11PDB0V0-EMC_AB[15]        | A[11] | Right | bank[0]]
    [IO12NDB0V0-EMC_AB[16]        | B[11] | Right | bank[0]]
    [IO12PDB0V0-EMC_AB[17]        | C[11] | Right | bank[0]]
    [IO13NDB0V0-EMC_AB[18]        | B[12] | Right | bank[0]]
    [IO13PDB0V0-EMC_AB[19]        | C[12] | Right | bank[0]]
    [IO14NDB0V0-EMC_AB[20]        | A[13] | Right | bank[0]]
    [IO14PDB0V0-EMC_AB[21]        | B[13] | Right | bank[0]]
    [IO15NDB0V0-EMC_AB[22]        | D[10] | Right | bank[0]]
    [IO15PDB0V0-EMC_AB[23]        | D[11] | Right | bank[0]]
    [IO16NDB0V0-EMC_AB[24]        | A[14] | Right | bank[0]]
    [IO16PDB0V0-EMC_AB[25]        | B[14] | Right | bank[0]]
    [VCCFPGAIOB[0] | A[2] A[8] A[15] C[4] C[10] E[7] E[9] E[11] | Up | bank[1]]
    [IO20NPB1V0-GBB2 | D[13] | Right | bank[1]]
    [IO20PPB1V0-GBA2 | C[14] | Right | bank[1]]
    [IO23NDB1V0      | C[16] | Right | bank[1]]
    [IO23PDB1V0-GCA2 | C[15] | Right | bank[1]]
    [IO24NDB1V0      | D[15] | Right | bank[1]]
    [IO24PDB1V0-GCB2 | D[14] | Right | bank[1]]
    [IO27NDB1V0-GCB0 | F[14] | Right | bank[1]]
    [IO27PDB1V0-GCB1 | E[14] | Right | bank[1]]
    [IO28NDB1V0-GCA0 | F[12] | Right | bank[1]]
    [IO28PDB1V0-GCA1 | E[12] | Right | bank[1]]
    [IO29NDB1V0-GDC0 | E[16] | Right | bank[1]]
    [IO29PDB1V0-GDC1 | E[15] | Right | bank[1]]
    [VCCMSSIOB[4] | K[3] N[2] K[6] | Up | bank[4]]
    [MAC_CLK               | L[5] | Right | bank[4]] 
    [IO48RSB4V0-MAC_MDC    | K[2] | Right | bank[4]] 
    [IO49RSB4V0-MAC_MDIO   | K[1] | Right | bank[4]] 
    [IO50RSB4V0-MAC_RXER   | L[4] | Right | bank[4]] 
    [IO51RSB4V0-MAC_CRSDV  | L[3] | Right | bank[4]] 
    [IO52RSB4V0-MAC_TXEN   | L[2] | Right | bank[4]] 
    [IO53RSB4V0-MAC_RXD[1] | N[1] | Right | bank[4]] 
    [IO54RSB4V0-MAC_RXD[0] | M[3] | Right | bank[4]] 
    [IO55RSB4V0-MAC_TXD[1] | M[2] | Right | bank[4]] 
    [IO56RSB4V0-MAC_TXD[0] | M[1] | Right | bank[4]] 
    [VCCFPGAIOB[5] | D[1] F[4] F[6] H[3] H[6] | Up | bank[5]]
    [IO59NDB5V0-GEA2-EMC_DB[0]  | H[5] | Right | bank[5]]
    [IO59PDB5V0-GEB2-EMC_DB[1]  | H[4] | Right | bank[5]]
    [IO60NDB5V0-EMC_DB[2]       | J[3] | Right | bank[5]]
    [IO60PDB5V0-GEC2-EMC_DB[3]  | J[2] | Right | bank[5]]
    [IO61NPB5V0-GEA0-EMC_DB[4]  | J[1] | Right | bank[5]]
    [IO61PPB5V0-GEA1-EMC_DB[5]  | H[2] | Right | bank[5]]
    [IO62NDB5V0-GEB0-EMC_DB[6]  | G[3] | Right | bank[5]]
    [IO62PDB5V0-GEB1-EMC_DB[7]  | G[2] | Right | bank[5]]
    [IO63NDB5V0-GEC0-EMC_DB[8]  | G[1] | Right | bank[5]]
    [IO63PDB5V0-GEC1-EMC_DB[9]  | F[1] | Right | bank[5]]
    [IO67NDB5V0                 | G[5] | Right | bank[5]]
    [IO67PDB5V0-GFC2            | G[4] | Right | bank[5]]
    [IO68NDB5V0-GFB2            | F[3] | Right | bank[5]]
    [IO68PDB5V0-GFA2            | E[3] | Right | bank[5]]
    [IO69NPB5V0-EMC_DB[10]      | E[4] | Right | bank[5]]
    [IO69PPB5V0-EMC_DB[11]      | F[5] | Right | bank[5]]
    [IO70NDB5V0-EMC_DB[12]      | E[2] | Right | bank[5]]
    [IO70PDB5V0-GAC2-EMC_DB[13] | E[1] | Right | bank[5]]
    [IO71NDB5V0-GAB2-EMC_DB[14] | C[1] | Right | bank[5]]
    [IO71PDB5V0-GAA2-EMC_DB[15] | B[1] | Right | bank[5]]
    [VCCMSSIOB[2] | J[11] J[15] L[11] M[14] | Up | gpio]
    [I2C_0_SCL-GPIO[23]  | J[12] | Right | gpio]
    [I2C_0_SDA-GPIO[22]  | J[13] | Right | gpio]
    [I2C_1_SCL-GPIO[31]  | J[14] | Right | gpio]
    [I2C_1_SDA-GPIO[30]  | J[16] | Right | gpio]
    [UART_0_RXD-GPIO[21] | K[12] | Right | gpio]
    [UART_1_TXD-GPIO[28] | K[14] | Right | gpio]
    [UART_1_RXD-GPIO[29] | K[15] | Right | gpio]
    [UART_0_TXD-GPIO[20] | K[16] | Right | gpio]
    [SPI_1_DO-GPIO[24]   | L[12] | Right | gpio]
    [SPI_1_SS-GPIO[27]   | L[13] | Right | gpio]
    [SPI_1_CLK-GPIO[26]  | L[14] | Right | gpio]
    [SPI_1_DI-GPIO[25]   | L[15] | Right | gpio]
    [SPI_0_SS-GPIO[19]   | M[13] | Right | gpio]
    [SPI_0_CLK-GPIO[18]  | M[15] | Right | gpio]
    [SPI_0_DI-GPIO[17]   | M[16] | Right | gpio]
    [SPI_0_DO-GPIO[16]   | N[16] | Right | gpio]

  gen-symbol-map(ps, bga-pkg(1.0, 0.4, [16, 16], [17.0 17.0], []))

  supports i2c : 
    sda => I2C_0_SDA-GPIO[22]
    scl => I2C_0_SCL-GPIO[23]
  supports i2c : 
    sda => I2C_1_SDA-GPIO[30] 
    scl => I2C_1_SCL-GPIO[31]

  supports spi : 
    mosi => SPI_1_DO-GPIO[24] 
    ss   => SPI_1_SS-GPIO[27] 
    sck  => SPI_1_CLK-GPIO[26]
    miso => SPI_1_DI-GPIO[25] 
  supports spi : 
    mosi => SPI_0_DO-GPIO[16] 
    ss   => SPI_0_SS-GPIO[19] 
    sck  => SPI_0_CLK-GPIO[18]
    miso => SPI_0_DI-GPIO[17] 

  supports reset :
    reset => MSS_RESET_N

  supports jtag :
    trstn => TRSTB 
    tms => TMS   
    tck => TCK   
    tdo => TDO   
    tdi => TDI   

  defn assign-se (p:Ref) :
    supports fpga-io :
      io => {p}
  defn assign-diff (p:Ref, np:Ref) :
    supports fpga-diff :
      N => {np}
      P => {p}
  for apin in ports(self) do :
    val s = to-string(apin)
    if prefix?(s, "IO") :
      val n = length(s)
      val is-p? = (n > 4) and s[4] == 'P'
      val has-d? = (n > 5) and s[5] == 'D'
      val has-p? = (n > 5) and s[5] == 'P'
      if (has-d? or has-p?) and (is-p?) :
        val hyphen = index-of-char(s, '-')
        val first-part = 
          if hyphen is Int : s[0 to (hyphen as Int)]
          else : s
        val twin-part = replace-at(first-part, 4, 'N')
        val twin-port = for p in ports(self) find! :
          prefix?(to-string(p), twin-part)
        assign-diff(apin, twin-port)
      assign-se(apin)

defn replace-at (s:String, p:Int, c:Char) :
  String $ for i in 0 to length(s) seq :
    if i == p : c
    else : s[i]
