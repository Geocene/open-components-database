#use-added-syntax(esir)
defpackage ocdb/texas-instruments/HDC1080 :
  import core
  import collections
  import math
  import esir
  import esir/utils
  import esir/gen
  import esir/repl-lib
  import jitpcb/visualizer

  import ocdb/tests/default-harness
  import ocdb/land-patterns
  import ocdb/symbols
  import ocdb/symbol-utils
  import ocdb/generic-components

  import ocdb/pinspec
  import ocdb/bundles
  import ocdb/box-symbol

pcb-package son100p300x300x80-7n :
  pad p[1] : {smd-pad(0.86, 0.42)} at loc(-1.435, 1.0, 0.0)
  pad p[2] : {smd-pad(0.86, 0.42)} at loc(-1.435, -0.0, 0.0)
  pad p[3] : {smd-pad(0.86, 0.42)} at loc(-1.435, -1.0, 0.0)
  pad p[4] : {smd-pad(0.86, 0.42)} at loc(1.435, -1.0, 0.0)
  pad p[5] : {smd-pad(0.86, 0.42)} at loc(1.435, -0.0, 0.0)
  pad p[6] : {smd-pad(0.86, 0.42)} at loc(1.435, 1.0, 0.0)
  pad p[7] : {smd-pad(1.5, 2.4)} at loc(0.0, -0.0, 0.0)

  layer(Silkscreen("F-SilkS", Top)) = Circle(Point(-2.495, 1.0), 0.2)
  layer(Silkscreen("F-SilkS", Top)) = Line(0.127, [ Point(-1.5, 1.53), Point(1.5, 1.53) ])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.127, [ Point(-1.5, -1.53), Point(1.5, -1.53) ])
  ref-label()

public unique pcb-component component :
  val pinspec = PinSpec $ #TABLE :
    [Ref | Int ... | Dir]
    [GND | 2 | Down]
    [SCL | 6 | Left]
    [SDA | 1 | Left]
    [VDD | 5 | Up]
    [NC[0] | 3 | Right]
    [NC[1] | 4 | Right]
    [NC[2] | 7 | Right]

  make-pins(pinspec)
  make-box-symbol(pinspec)
  assign-package(son100p300x300x80-7n, pinspec)

  mpn = "HDC1080DMBR"
  manufacturer = "Texas Instruments"
  reference-prefix = "U"

public unique pcb-module module :
  port i2c : i2c
  port power : power
  inst sensor : {ocdb/texas-instruments/HDC1080/component}
  net (power.vdd, sensor.VDD)
  net (power.gnd, sensor.GND)
  net (i2c.sda, sensor.SDA)
  net (i2c.scl, sensor.SCL)
  bypass-cap-strap(sensor.VDD, sensor.GND, 0.1e-6)