#use-added-syntax(esir2)
defpackage ocdb/calculate-connected :
  import core
  import collections
  import esir2
  import esir2/utils

; [TODO] nets, refs, top-level-ref

val NET-TABLE = HashTable<Ref,Int>()
var CALCULATE-CONNECTED:True|False = false

public defn calculate-connected () :
  false
  ; inside pcb-module :
  ;   for (n in nets(self), i in 0 to false) do :
  ;     ; println("Register %_ as connected" % [refs(n)])
  ;     if length(refs(n)) > 1 :
  ;       for r in refs(n) do :
  ;         NET-TABLE[r] = i
  ;   CALCULATE-CONNECTED = true

public defn connected-table-calculated? () :
  CALCULATE-CONNECTED

public defn connected? (input-r:JITObject) :
  false
  ; val r = top-level-ref(input-r)
  ; key?(NET-TABLE, r)

public defn connected? (input-a:JITObject, input-b:JITObject) :
  false
  ; val a = top-level-ref(input-a)
  ; val b = top-level-ref(input-b)
  ; val neta = get?(NET-TABLE, a)
  ; val netb = get?(NET-TABLE, b)
  ; val result = 
  ;   match(neta:Int, netb:Int) :
  ;     neta == netb
  ; ; println("Connected?(%_ (%_), %_ (%_)) = %_" % [input-a, a, input-b, b, result])
  ; result