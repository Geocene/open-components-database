#use-added-syntax(jitx)
defpackage ocdb/property-structs:
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/defaults
  import ocdb/generator-utils

public pcb-struct ocdb/property-structs/Interval :
  ; Maximum and minimum values for all operation modes
  min:Double
  max:Double
  ; Nominal operating value
  nominal:Double|False

public defn contains? (a:Interval, b:Interval) -> True|False :
  min(a) <= min(b) and
  max(a) >= max(b)

public defn contains? (a:Interval, b:Double) -> True|False :
  min(a) <= b and
  max(a) >= b

; === Pin Property Structs ===
; ============================

; Library property name: generic-pin
public pcb-struct ocdb/property-structs/GenericPin :
  max-voltage:Interval
  recommended-voltage:Interval|False
  rated-esd:Double|False

; Library property name: power-supply-pin
public pcb-struct ocdb/property-structs/PowerSupplyPin :
  supply-voltage:Double
  max-current:Double
  

; === Component Property Structs ===
; ==================================

; Library property name: rated-temperature
public pcb-struct ocdb/property-structs/RatedTemperature :
  operating-temperature : Interval

; public defn apply-digital-io-params (obj:JITXObject, vil:Double vih:Double vol:Double voh:Double) :
;   inside pcb-module :
;     property(obj.digital-io) = true
;     property(obj.type) = "io"
;     property(obj.vil) = vil
;     property(obj.vih) = vih
;     property(obj.vol) = vol
;     property(obj.voh) = voh

; public defn apply-digital-input-params (obj:JITXObject, vil:Double vih:Double) :
;   inside pcb-module :
;     property(obj.digital-io) = true
;     property(obj.type) = "i"
;     property(obj.vil) = vil
;     property(obj.vih) = vih

; public defn apply-enable-pin-params (obj:JITXObject, enable:JITXObject) :
;   inside pcb-module :
;     property(obj.digital-io) = true
;     property(obj.type) = "i"
;     property(obj.enable-pin) = true
;     property(obj.active-ref) = enable

; public defn apply-digital-output-params (obj:JITXObject, vil:Double vih:Double) :
;   inside pcb-module :
;     property(obj.digital-io) = true
;     property(obj.type) = "o"
;     property(obj.vil) = vil
;     property(obj.vih) = vih

; public defn apply-lvds-params (obj:JITXObject, vol:Double, voh:Double, vo-diff:[Double,Double,Double] vo-cm:[Double,Double,Double] vi-diff:[Double,Double,Double] vi-cm:[Double,Double,Double]) :
;   inside pcb-module :
;     property(obj.lvds) = true
;     property(obj.voh) = voh 
;     property(obj.vol) = vol 
;     property(obj.vo-diff) = vo-diff 
;     property(obj.vo-cm) = vo-cm   
;     property(obj.vi-diff) = vi-diff 
;     property(obj.vi-cm) = vi-cm   